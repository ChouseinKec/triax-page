@use '../../../mixins//mixins.module.scss' as inputMixins;

.PositionSelect {
	@include inputMixins.components--view();
	display: flex;
	flex-direction: column;
	justify-content: space-around;
}

.Positions {
	padding: var(--size-sm);
	aspect-ratio: 1/1;

	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: repeat(3, 1fr);
	gap: var(--size-md);

	&[data-corners='false'] {
		[data-value*='top-left'],
		[data-value*='top-right'],
		[data-value*='bottom-left'],
		[data-value*='bottom-right'] {
			opacity: 0.3;
			pointer-events: none;
		}
	}

	&[data-center='false'] {
		[data-value*='all'] {
			opacity: 0.3;
			pointer-events: none;
		}
	}
}

.Position {
	position: relative;
	cursor: pointer;
	border-radius: var(--size-sm);

	&::after {
		content: '';
		display: block;

		width: var(--size-sm);
		height: var(--size-sm);

		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		background: var(--color-gray);
		border-radius: 50%;
	}

	&:hover::after,
	&[data-is-selected='true']::after {
		background: var(--theme-color-secondary);
	}
}

.PositionSelect_Current {
	width: 100%;

	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;

	color: var(--color-gray);
	text-align: center;
	text-transform: uppercase;
	font-size: var(--font-size-sm);
	padding: var(--size-md);
	padding-top: var(--size-lg);
	border-top: 1px solid var(--color-gray);
}
